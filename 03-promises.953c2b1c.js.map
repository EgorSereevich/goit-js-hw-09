{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAGnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGPT,EAAKC,OAAOe,iBAAiB,UAC7B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOpB,EAAKI,QAAQiB,OAC5BC,EAAOF,OAAOpB,EAAKK,OAAOgB,OAC1BE,EAASH,OAAOpB,EAAKM,SAASe,OAGlCF,GAAgBG,EAChB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAG/BjB,EAFWiB,EAAI,EACfL,GAASG,GAENG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAInDT,EAAKC,OAAOgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Loading } from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nrefs.formEl.addEventListener('submit', onSubmit);\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  let step = Number(refs.stepEl.value);\n  let amount = Number(refs.amountEl.value);\n\n  let position = 0;\n  delay = delay - step;\n  for (let i = 0; i < amount; i += 1) {\n    position = i + 1;\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  refs.formEl.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.953c2b1c.js.map"}