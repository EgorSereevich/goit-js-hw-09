{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAGnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGbT,EAAKC,OAAOe,iBAAiB,UAC7B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOpB,EAAKI,QAAQiB,OAC5BC,EAAOF,OAAOpB,EAAKK,OAAOgB,OAC1BE,EAASH,OAAOpB,EAAKM,SAASe,OAE9BG,EAAW,EACfL,GAAgBG,EAChB,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BD,EAAWC,EAAI,EACfN,GAASG,EACTf,EAAciB,EAAUL,GACrBO,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAIrDT,EAAKC,OAAO+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Loading } from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nrefs.formEl.addEventListener('submit', onSubmit);\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  let step = Number(refs.stepEl.value);\n  let amount = Number(refs.amountEl.value);\n\n  let position = 0;\n  delay = delay - step;\n  for (let i = 0; i < amount; i += 1) {\n    position = i + 1;\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  refs.formEl.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.c080a550.js.map"}